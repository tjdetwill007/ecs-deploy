name: Build and Deploy to ECS
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
        AWS_REGION: "us-east-1"
        ECR_URL: "520256696060.dkr.ecr.us-east-1.amazonaws.com"
        IMAGE_NAME: "pythonapp"
        VERSION: "2"

    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
        - name: Login to Aws ECR
          run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_URL }}

        - name: Build and Push Docker image
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: ${{ env.ECR_URL }}/${{ env.IMAGE_NAME }}:v${{ env.VERSION }}

        - name: Download task definition
          run: |
            aws ecs describe-task-definition --task-definition 
            runpython --query taskDefinition > task-definition.json

        - name: Fill in the new image ID in the Amazon ECS task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: task-definition.json
            container-name: pythonapp
            image: ${{ env.ECR_URL }}/${{ env.IMAGE_NAME }}:v${{ env.VERSION }}

        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: ${{ steps.task-def.outputs.task-definition }}
            service: myservice
            cluster: testecs
            wait-for-service-stability: true            
